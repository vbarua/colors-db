/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.12/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    application
    id("com.diffplug.spotless") version "7.0.2"
    id("com.google.protobuf") version "0.9.4"
}

spotless {
    java {
        targetExclude("**/generated/**/*.*")
        googleJavaFormat()
    }
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    implementation(libs.calcite.core)
    implementation(libs.calcite.server) // For SqlDdlParserImpl
    compileOnly(libs.immutables.annotations)
    annotationProcessor(libs.immutables.value)
    implementation(libs.protobuf.java)
    implementation(libs.protobuf.java.util)
    implementation(libs.substrait.core)
    implementation(libs.substrait.isthmus)

    implementation("ch.qos.logback:logback-classic:1.5.16")

    // Use JUnit Jupiter for testing.
    testImplementation(libs.junit.jupiter.api)
    testRuntimeOnly(libs.junit.jupiter.engine)
    testRuntimeOnly("org.junit.platform:junit-platform-launcher")
}

sourceSets {
    main {
        proto.srcDirs("src/main/resources/extensions")
    }
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

protobuf {
    protoc {
        artifact =  "com.google.protobuf:protoc:${libs.versions.protobuf.get()}"
    }
}


tasks.named<Test>("test") {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
